mads 2.1.0
Source: /Users/johan/Documents/workspace/CodeJam2021/src/savefuture.asm
     1 				;
     2 				; OLC CodeJam 2021- Save the Future
     3 				;
     4 				; For the Atari 8-bit computers (64kB needed)
     5 				;
     6 				; Coded by: sjfroos
     7 				;
     8 				; Adresses needed
     9 				;
    10 = D40B			VCOUNT=$d40b
    11 = D40A			WSYNC=$d40a
    12 = E462			XITVBV=$e462
    13 = D404			HSCRL=$d404
    14 = E45C			SETVBV=$e45c
    15 				;
    16 				; Start adress
    17 				;
    18 					org $2000
    19
    20 				;
    21 				; Init
    22 				;
    23
    24 				start
    25 				; 	Load display list
    26 FFFF> 2000-2011> A9 12		lda #<dl
    27 2002 8D 30 02			sta $230
    28 2005 A9 20			lda #>dl
    29 2007 8D 31 02			sta $231
    30 					; wide playfield
    31 					;lda #35
    32 					;sta $22f
    33 200A A9 00			lda #0
    34 200C 8D 04 D4			sta HSCRL
    35
    36 200F 4C 0F 20		stop	jmp stop	
    37
    38 				;
    39 02E0-02E1> 00 20			run start	
    40 				;
    41 				; VBI routine
    42 				;
    43
    44
    45 				;
    46 				; DLI Routine
    47 				;
    48
    49 				;-----------------------------
    50 				; Data	
    51 				;-----------------------------
    52 				; Display List
    53 				;
    54 2012				.local dl
    55 2012-2060> F0			.byte $F0
    56 2013 45 00 40		lms00	.byte $45,$00,$40
    57 2016 44 00 41		lms01	.byte $44,$00,$41
    58 2019 44 00 42		lms02	.byte $44,$00,$42
    59 201C 44 00 43		lms03	.byte $44,$00,$43
    60 201F 44 00 44		lms04	.byte $44,$00,$44
    61 2022 44 00 45		lms05	.byte $44,$00,$45
    62 2025 44 00 46		lms06	.byte $44,$00,$46
    63 2028 44 00 47		lms07	.byte $44,$00,$47
    64 202B 44 00 48		lms08	.byte $44,$00,$48
    65 202E 44 00 49		lms09	.byte $44,$00,$49
    66 2031 44 00 50		lms10	.byte $44,$00,$50
    67 2034 44 00 51		lms11	.byte $44,$00,$51
    68 2037 44 00 52		lms12	.byte $44,$00,$52
    69 203A 44 00 53		lms13	.byte $44,$00,$53
    70 203D 44 00 54		lms14	.byte $44,$00,$54
    71 2040 44 00 55		lms15	.byte $44,$00,$55
    72 2043 44 00 56		lms16	.byte $44,$00,$56
    73 2046 44 00 57		lms17	.byte $44,$00,$57
    74 2049 44 00 58		lms18	.byte $44,$00,$58
    75 204C 44 00 60		lms19	.byte $44,$00,$60
    76 204F 44 00 61		lms20	.byte $44,$00,$61
    77 2052 44 00 62		lms21	.byte $44,$00,$62
    78 2055 44 00 63		lms22	.byte $44,$00,$63
    79 2058 44 00 64		lms23	.byte $44,$00,$64
    80 205B 47 00 65		txt		.byte $47,$00,$65
    81 205E 41 12 20				.byte $41,a(dl)
    82 					.endl
    83 				;
    84 				; Screen memory
    85 				;
    86 2061				org $4000
    87 4000				.local sm
    88 4000-4009> 26 29 32 33 + 	.byte "FIRST LINE"
    89 					.endl
    90 400A				org $4100
    91 4100-410A> 33 65 63 6F + 	.byte "Second line"
    92 410B				org $6500
    93 					;.local text	
    94 6500-650B> 34 65 73 74 + text	.byte "Test of text"
    95 					
    96 						
    97 				;
    98 				; Character sets
    99 				;
   100 650C				org $7000
   101 7000				.local chset0
   102 					.endl
   103 7000				org $7400
   104 7400				.local chset1
   105 					.endl
   106 7400				org $7800
   107 7800				.local chset2
   108 7800				org $8200
   109 					.endl
   110 8200				.local chset3
   111 8200				org $8600
   112 					.endl
   113 					
